[{"D:\\it-camasutra\\social_network\\my-app\\src\\reportWebVitals.ts":"1","D:\\it-camasutra\\social_network\\my-app\\src\\App.tsx":"2","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Navbar\\Navbar.tsx":"3","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Header\\Header.tsx":"4","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Dialogs\\Dialogs.tsx":"5","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"6","D:\\it-camasutra\\social_network\\my-app\\src\\index.tsx":"7","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\Profile.tsx":"8","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"9","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Music\\Music.tsx":"10","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Setting\\Setting.tsx":"11","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"12","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx":"13","D:\\it-camasutra\\social_network\\my-app\\src\\components\\News\\News.tsx":"14","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"15","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Sidebar\\Sidebar.tsx":"16","D:\\it-camasutra\\social_network\\my-app\\src\\redux\\profile-reducer.ts":"17","D:\\it-camasutra\\social_network\\my-app\\src\\redux\\dialogs-reducer.ts":"18","D:\\it-camasutra\\social_network\\my-app\\src\\redux\\redux-store.ts":"19","D:\\it-camasutra\\social_network\\my-app\\src\\redux\\sidebar-reducer.ts":"20","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx":"21","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"22","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Users\\UsersContainer.tsx":"23","D:\\it-camasutra\\social_network\\my-app\\src\\redux\\users-reducer.ts":"24","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Users\\Users.tsx":"25","D:\\it-camasutra\\social_network\\my-app\\src\\components\\common\\Preloader\\ Preloader.tsx":"26","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"27","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Header\\HeaderContainer.tsx":"28","D:\\it-camasutra\\social_network\\my-app\\src\\redux\\auth-reducer.ts":"29","D:\\it-camasutra\\social_network\\my-app\\src\\api\\api.ts":"30","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Login\\Login.tsx":"31","D:\\it-camasutra\\social_network\\my-app\\src\\hoc\\WithAuthRedirect.tsx":"32","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"33","D:\\it-camasutra\\social_network\\my-app\\src\\utils\\validators\\validators.ts":"34","D:\\it-camasutra\\social_network\\my-app\\src\\components\\common\\FormsControls\\FormsControls.tsx":"35","D:\\it-camasutra\\social_network\\my-app\\src\\redux\\app-reducer.ts":"36"},{"size":425,"mtime":1610213405721,"results":"37","hashOfConfig":"38"},{"size":2862,"mtime":1620320622121,"results":"39","hashOfConfig":"38"},{"size":1194,"mtime":1619978321173,"results":"40","hashOfConfig":"38"},{"size":759,"mtime":1620295724242,"results":"41","hashOfConfig":"38"},{"size":2917,"mtime":1620236726956,"results":"42","hashOfConfig":"38"},{"size":2467,"mtime":1620236685973,"results":"43","hashOfConfig":"38"},{"size":866,"mtime":1615282378019,"results":"44","hashOfConfig":"38"},{"size":575,"mtime":1618736461229,"results":"45","hashOfConfig":"38"},{"size":511,"mtime":1611617400565,"results":"46","hashOfConfig":"38"},{"size":175,"mtime":1610132220844,"results":"47","hashOfConfig":"38"},{"size":183,"mtime":1610132780345,"results":"48","hashOfConfig":"38"},{"size":1283,"mtime":1618750355117,"results":"49","hashOfConfig":"38"},{"size":245,"mtime":1616499160540,"results":"50","hashOfConfig":"38"},{"size":171,"mtime":1610132671617,"results":"51","hashOfConfig":"38"},{"size":510,"mtime":1611760785544,"results":"52","hashOfConfig":"38"},{"size":160,"mtime":1611766490002,"results":"53","hashOfConfig":"38"},{"size":2901,"mtime":1618738649041,"results":"54","hashOfConfig":"38"},{"size":2071,"mtime":1618680552016,"results":"55","hashOfConfig":"38"},{"size":834,"mtime":1620313941379,"results":"56","hashOfConfig":"38"},{"size":531,"mtime":1614505043429,"results":"57","hashOfConfig":"38"},{"size":2762,"mtime":1620295849064,"results":"58","hashOfConfig":"38"},{"size":2591,"mtime":1618738649059,"results":"59","hashOfConfig":"38"},{"size":4747,"mtime":1619462856264,"results":"60","hashOfConfig":"38"},{"size":5203,"mtime":1617214238604,"results":"61","hashOfConfig":"38"},{"size":1831,"mtime":1617453507173,"results":"62","hashOfConfig":"38"},{"size":212,"mtime":1616326263801,"results":"63","hashOfConfig":"38"},{"size":2264,"mtime":1620321242572,"results":"64","hashOfConfig":"38"},{"size":912,"mtime":1620310133351,"results":"65","hashOfConfig":"38"},{"size":3050,"mtime":1620304837233,"results":"66","hashOfConfig":"38"},{"size":1520,"mtime":1620242535865,"results":"67","hashOfConfig":"38"},{"size":2076,"mtime":1620303538854,"results":"68","hashOfConfig":"38"},{"size":859,"mtime":1617647682367,"results":"69","hashOfConfig":"38"},{"size":1625,"mtime":1620305728838,"results":"70","hashOfConfig":"38"},{"size":505,"mtime":1620235478816,"results":"71","hashOfConfig":"38"},{"size":995,"mtime":1620240532622,"results":"72","hashOfConfig":"38"},{"size":1103,"mtime":1620315963010,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"16n85si",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"81"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"81"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"81"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"81"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\it-camasutra\\social_network\\my-app\\src\\reportWebVitals.ts",[],["161","162"],"D:\\it-camasutra\\social_network\\my-app\\src\\App.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Navbar\\Navbar.tsx",[],["163","164"],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Header\\Header.tsx",[],["165","166"],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Dialogs\\Dialogs.tsx",["167","168"],"import s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React, {ChangeEvent} from \"react\";\r\nimport {InitStateType} from \"../../redux/dialogs-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nexport type DialogsPropsType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nexport type MessagePropsType = {\r\n    message: string\r\n}\r\n\r\nexport type Props = {\r\n    dialogPage: InitStateType\r\n    // onNewMessageChange: (body: string) => void\r\n    onSendMessageClick: (newMessageBody: string) => void\r\n    // addNewMessage: ()=> void\r\n    isAuth: boolean\r\n    newMessageBody: string\r\n}\r\n\r\nlet maxLength = maxLengthCreator(6)\r\nconst AddMessageForm: React.FC<InjectedFormProps<Props>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={'newMessageBody'}\r\n                   validate={[required, maxLength ]}\r\n                   placeholder={'enter message'}>\r\n            </Field>\r\n            <div>\r\n                <button>отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<Props>({\r\n    // a unique name for the form   уникальное имя\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\n\r\n\r\nfunction Dialogs(props: Props) {\r\n    let state = props.dialogPage\r\n    let dialogElement = state.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n    let messagesElement = state.messages.map(m => <Message message={m.message}/>)\r\n    // let newMessageBody = state.newMessageBody\r\n    // let onSendMessageClick = () => {\r\n        // props.onSendMessageClick()\r\n        // props.dispatch(sendMessageAC())\r\n    // }\r\n\r\n    let addNewMessage = (values: Props) => {\r\n        props.onSendMessageClick(values.newMessageBody)\r\n    }\r\n\r\n    // let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    //     let body = e.currentTarget.value\r\n    //     props.onNewMessageChange(body)\r\n    //     // props.dispatch(newMessageBodyAC(body))\r\n    // }\r\n    // if (!props.isAuth) return <Redirect to={\"/login\"}/>      //(props.isAuth === false\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElement}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>\r\n                    {messagesElement}\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\index.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\Profile.tsx",["169","170"],"import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport MyPosts, {PropsArray} from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {PropsType} from \"./ProfileContainer\";\r\n\r\n\r\n\r\n\r\nfunction Profile(props: PropsType) {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Music\\Music.tsx",["171"],"import s from './Music.module.css'\r\nimport React from \"react\";\r\n\r\nfunction Music (){\r\n    return(\r\n        <div>\r\n    music\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Setting\\Setting.tsx",["172"],"import s from './Setting.module.css'\r\nimport React from \"react\";\r\n\r\nfunction Setting (){\r\n    return(\r\n        <div>\r\n    setting\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["173"],"import s from \"./ProfileInfo.module.css\"\r\nimport React from \"react\";\r\nimport Preloader from \"../../common/Preloader/ Preloader\";\r\nimport ProfileStatus from './ProfileStatus'\r\ntype ProfileInfoProps={\r\n    profile: any\r\n    status: string\r\n    updateStatus: string\r\n}\r\n\r\nfunction ProfileInfo(props: ProfileInfoProps) {\r\nif (!props.profile){\r\n    return <Preloader/>\r\n}\r\n    return (\r\n        <div >\r\n            {/*<div className={s.discrip}>*/}\r\n            {/*    <img src={league}*/}\r\n            {/*        alt=\"\"/>*/}\r\n            {/*</div>*/}\r\n\r\n            <div className={s.cont}>\r\n                <img  src={props.profile.photos.large} alt={'user photo'}/>\r\n                </div>\r\n\r\n                <div>\r\n                    {/*<p>{props.profile.userId}</p>*/}\r\n                    <p>Имя: {props.profile.fullName}</p>\r\n                </div>\r\n            <div>\r\n                <p>{props.profile.lookingForAJobDescription}</p>\r\n            </div>\r\n            <div>\r\n                <p>{props.profile.contacts.vk}</p>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n            {/*<div>*/}\r\n            {/*    main content*/}\r\n            {/*</div>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\News\\News.tsx",["174"],"import s from './News.module.css'\r\nimport React from \"react\";\r\n\r\nfunction News (){\r\n    return(\r\n        <div>\r\n    news\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Sidebar\\Sidebar.tsx",[],["175","176"],"D:\\it-camasutra\\social_network\\my-app\\src\\redux\\profile-reducer.ts",[],"D:\\it-camasutra\\social_network\\my-app\\src\\redux\\dialogs-reducer.ts",[],"D:\\it-camasutra\\social_network\\my-app\\src\\redux\\redux-store.ts",[],"D:\\it-camasutra\\social_network\\my-app\\src\\redux\\sidebar-reducer.ts",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["177"],"import React from \"react\";\r\nimport {addPostAC,  PostType} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {Dispatch} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\n\r\n\r\n\r\n// export type PostsType = {\r\n//     id: number\r\n//     message: string\r\n//     countsLike: number\r\n// }\r\n\r\nexport type PropsArrayContainer = {\r\n    // posts: Array<PostsType>\r\n    // addPost: () => void\r\n    // changeUpdateText: (value: string) => void\r\n    // newPostText: string\r\n    // dispatch: (action: ActionsType) => void\r\n    // store: StoreType\r\n    // state: RootStateProps\r\n}\r\n\r\n\r\n// function MyPostsContainer(props: PropsArrayContainer) {\r\n//\r\n//     return (\r\n// <StoreContext.Consumer>\r\n//     {store =>{\r\n//         let postsElement = store.getState().profilePage.posts.map(p => <Post message={p.message} countsLike={p.countsLike}/>)\r\n//         // let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n//\r\n//         let addPost = () => {\r\n//             store.dispatch(addPostAC(store.getState().profilePage.newPostText))\r\n//             // props.addPost()\r\n//         }\r\n//\r\n//         let newTextChangeHandler = (text: string) => {\r\n//             store.dispatch(newTextChangeHandlerAC(text))\r\n//             // props.changeUpdateText(value)\r\n//             // props.dispatch({type: \"CHANGE-NEW-TEXT\", newText: value})\r\n//         }\r\n//         return  <MyPosts posts={store.getState().profilePage.posts}\r\n//                          addPost={addPost}\r\n//                          newPostText={store.getState().profilePage.newPostText}\r\n//                          changeUpdateText={newTextChangeHandler}/>\r\n//     }\r\n//\r\n//     }\r\n//\r\n// </StoreContext.Consumer>\r\n//\r\n//     )\r\n// }\r\n\r\ntype  MapStatePropsType={\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n}\r\ntype MapDispatchType= {\r\n    addPost: (newPostText: string)=>void\r\n    // changeUpdateText: (text: string) =>void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType=> {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchType => {\r\n    return {\r\n        addPost:(newPostText: string)=> {\r\n            dispatch(addPostAC(newPostText))\r\n         },\r\n        // changeUpdateText: (text)=>{\r\n        //     dispatch(newTextChangeHandlerAC(text))\r\n        // }\r\n    }\r\n}\r\n\r\nexport let MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostContainer","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Users\\UsersContainer.tsx",["178","179"],"import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    follow, getUsersThunkCreator, InitialStateType,\r\n    setCurrentPage,  toggleFollowingProgress,\r\n    unfollow } from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/ Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype UsersPropsType = MapStatePropsType & MapDispatchType & InitialStateType\r\n\r\nexport type  MapStatePropsType = InitialStateType\r\n    // {\r\n    // users: UsersType[],\r\n//     pageSize: number\r\n//     totalUsersCount: number\r\n//     currentPage: number\r\n//     isFetching: boolean\r\n//     followingInProgress: InitialStateType []\r\n//\r\n// }\r\n\r\nexport type MapDispatchType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n\r\n    setCurrentPage: (pageNumber: number) => void\r\n\r\n\r\n    toggleFollowingProgress: (isFetching: boolean, id: number) => void\r\n    getUsers: (currentPage:number , pageSize:number)=> void\r\n}\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    constructor(props: UsersPropsType) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsers(this.props.pageSize, this.props.currentPage)\r\n        // this.props.toggleIsFetching(true)\r\n        // userAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n        //     this.props.toggleIsFetching(false)\r\n        //     this.props.setUsers(data.items)\r\n        //     this.props.setTotalUsersCount(data.totalCount)\r\n        // })\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number ) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n        // this.props.setCurrentPage(pageNumber)\r\n        // this.props.toggleIsFetching(true)\r\n        // userAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n        //     this.props.toggleIsFetching(false)\r\n        //     this.props.setUsers(data.items)\r\n        //     this.props.setTotalUsersCount(data.totalCount)\r\n        // })\r\n    }\r\n\r\n    render() {\r\n\r\n        // return <Users totalUsersCount={this.props.totalUsersCount} pageSize={this.props.pageSize}\r\n        //               currentPage={this.props.currentPage} onPageChanged={this.onPageChanged}\r\n        //               users={this.props.users}\r\n        // follow={this.props.follow}\r\n        //               unfollow={this.props.unfollow}\r\n        // />\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users users={this.props.users} pageSize={this.props.pageSize}\r\n                        totalUsersCount={this.props.totalUsersCount} currentPage={this.props.currentPage}\r\n                        follow={this.props.follow} unfollow={this.props.unfollow}\r\n                        setCurrentPage={this.props.setCurrentPage}\r\n                        onPageChanged={this.onPageChanged} isFetching={this.props.isFetching}\r\n                   followingInProgress={this.props.followingInProgress} toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                   getUsers={this.props.getUsers}\r\n            />\r\n        </>\r\n\r\n\r\n    }\r\n}\r\n\r\nexport let mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n// export let mapDispatchToProps = (dispatch: Dispatch): MapDispatchType => {\r\n//     return {\r\n//         follow: (userId: number) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unfollow: (userId: number) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (users: UsersType[]) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber: number) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount: number) => {\r\n//             dispatch(setTotalUsersCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching: boolean)=>{\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps,\r\n        {follow, unfollow,\r\n            setCurrentPage,\r\n            toggleFollowingProgress,\r\n            getUsers: getUsersThunkCreator}),\r\n// WithAuthRedirect\r\n)(UsersContainer)","D:\\it-camasutra\\social_network\\my-app\\src\\redux\\users-reducer.ts",["180","181","182"],"import {userAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nexport type UsersType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    location: {sity: string, country: string}\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    isFetching: boolean\r\n\r\n}\r\n\r\nexport const initialState = {\r\n    users: [] as Array<UsersType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true ,\r\n    followingInProgress: [] as Array <Number>\r\n\r\n}\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n\r\n            return  {\r\n                ...state,\r\n                users: state.users.map(u=>{\r\n                    if (u.id === action.userId){\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case 'UNFOLLOW':\r\n            return  {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId){\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case \"SET-USERS\":\r\n            return {\r\n                ...state,\r\n               users: [ ...action.users]   //старые юзеры + новые\r\n            }\r\n        case 'SET-CURRENT-PAGE':\r\n            return {\r\n                ...state,\r\n             currentPage: action.currentPage\r\n            }\r\n        case \"SET-TOTAL-USERS-COUNT\":\r\n            return {...state, totalUsersCount: action.count}\r\n        case \"TOGGLE-IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"TOGGLE-IS-FOLLOWING-PROGRESS\":{\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id=> id != action.userId)\r\n            }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport let followsSuccess = (userId: number) => ({type: \"FOLLOW\", userId} as const)\r\nexport let unfollowSuccess = (userId: number) => ({type: \"UNFOLLOW\", userId} as const)\r\nexport let setUsers = (users: Array<UsersType>) => ({type: \"SET-USERS\", users} as const)\r\nexport let setCurrentPage = (currentPage: number) => ({type: \"SET-CURRENT-PAGE\", currentPage } as const)\r\nexport let setTotalUsersCount = (totalUsersCount: number) => ({type: \"SET-TOTAL-USERS-COUNT\",count: totalUsersCount } as const)\r\nexport let toggleIsFetching = (isFetching: boolean) => ({type: \"TOGGLE-IS-FETCHING\",isFetching } as const)\r\nexport let toggleFollowingProgress=(isFetching: boolean, userId: number)=>({type: \"TOGGLE-IS-FOLLOWING-PROGRESS\" , isFetching, userId} as const)\r\n\r\nexport const getUsersThunkCreator = (currentPage:number , pageSize:number)=>{\r\n   return (dispatch: Dispatch)=>{\r\n        dispatch(toggleIsFetching(true))\r\n        userAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number)=>{\r\n   return (dispatch: Dispatch)=>{\r\n       dispatch(toggleFollowingProgress(true,userId ))\r\n       userAPI.follow(userId)\r\n           // axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`,{}, {\r\n           //     withCredentials: true,\r\n           //     headers: {\r\n           //         \"API-KEY\": \"45e88326-78f0-45ca-b953-491c7fd66778\"\r\n           //     }\r\n           //     })\r\n           .then(response => {\r\n               if (response.data.resultCode == 0){\r\n                   dispatch(followsSuccess(userId))\r\n               }\r\n               dispatch(toggleFollowingProgress(false, userId))\r\n           })\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number)=>{\r\n   return (dispatch: Dispatch)=>{\r\n     dispatch( toggleFollowingProgress(true,userId ))\r\n       userAPI.unfollow(userId)\r\n           // axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {\r\n           //         withCredentials: true,\r\n           //         headers: {\r\n           //             \"API-KEY\": \"45e88326-78f0-45ca-b953-491c7fd66778\"\r\n           //         }\r\n           //     })\r\n           .then(response => {\r\n               if (response.data.resultCode == 0){\r\n                   dispatch(unfollowSuccess(userId))\r\n               }\r\n              dispatch( toggleFollowingProgress(false, userId))\r\n           })\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof followsSuccess>\r\n    | ReturnType<typeof unfollowSuccess>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof toggleFollowingProgress>\r\n\r\nexport default usersReducer","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Users\\Users.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\common\\Preloader\\ Preloader.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Header\\HeaderContainer.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\redux\\auth-reducer.ts",[],"D:\\it-camasutra\\social_network\\my-app\\src\\api\\api.ts",[],["183","184"],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Login\\Login.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\hoc\\WithAuthRedirect.tsx",["185"],"import React, {Component, ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\n\r\ntype mapStateToPropsType={\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType=> {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport function WithAuthRedirect <T>(Component:ComponentType<T>) {\r\n    const RedirectComponent=(props: mapStateToPropsType) =>{\r\n        let {isAuth, ...resProps} = props\r\n        if (!isAuth) return <Redirect to={\"/login\"}/>        //this.props.isAuth === false\r\n        return (\r\n            <Component {...resProps as T}/>\r\n        )\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n\r\n}","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["186","187"],"D:\\it-camasutra\\social_network\\my-app\\src\\utils\\validators\\validators.ts",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\common\\FormsControls\\FormsControls.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\redux\\app-reducer.ts",[],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"188","replacedBy":"192"},{"ruleId":"190","replacedBy":"193"},{"ruleId":"188","replacedBy":"194"},{"ruleId":"190","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":4,"column":16,"nodeType":"198","messageId":"199","endLine":4,"endColumn":27},{"ruleId":"196","severity":1,"message":"200","line":6,"column":9,"nodeType":"198","messageId":"199","endLine":6,"endColumn":17},{"ruleId":"196","severity":1,"message":"201","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":15},{"ruleId":"196","severity":1,"message":"202","line":3,"column":18,"nodeType":"198","messageId":"199","endLine":3,"endColumn":28},{"ruleId":"196","severity":1,"message":"203","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":9},{"ruleId":"196","severity":1,"message":"203","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":9},{"ruleId":"204","severity":1,"message":"205","line":23,"column":17,"nodeType":"206","endLine":23,"endColumn":76},{"ruleId":"196","severity":1,"message":"203","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":9},{"ruleId":"188","replacedBy":"207"},{"ruleId":"190","replacedBy":"208"},{"ruleId":"196","severity":1,"message":"209","line":1,"column":8,"nodeType":"198","messageId":"199","endLine":1,"endColumn":13},{"ruleId":"196","severity":1,"message":"210","line":11,"column":9,"nodeType":"198","messageId":"199","endLine":11,"endColumn":25},{"ruleId":"211","severity":1,"message":"212","line":44,"column":5,"nodeType":"213","messageId":"214","endLine":46,"endColumn":6},{"ruleId":"215","severity":1,"message":"216","line":77,"column":64,"nodeType":"217","messageId":"218","endLine":77,"endColumn":66},{"ruleId":"215","severity":1,"message":"219","line":116,"column":45,"nodeType":"217","messageId":"218","endLine":116,"endColumn":47},{"ruleId":"215","severity":1,"message":"219","line":135,"column":45,"nodeType":"217","messageId":"218","endLine":135,"endColumn":47},{"ruleId":"188","replacedBy":"220"},{"ruleId":"190","replacedBy":"221"},{"ruleId":"196","severity":1,"message":"222","line":1,"column":16,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"223","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":17},{"ruleId":"196","severity":1,"message":"224","line":3,"column":9,"nodeType":"198","messageId":"199","endLine":3,"endColumn":18},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],["225"],["226"],["225"],["226"],"@typescript-eslint/no-unused-vars","'ChangeEvent' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'MyPosts' is defined but never used.","'PropsArray' is defined but never used.","'s' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["225"],["226"],"'React' is defined but never used.","'WithAuthRedirect' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",["225"],["226"],"'Component' is defined but never used.","'Preloader' is defined but never used.","'setStatus' is defined but never used.","no-global-assign","no-unsafe-negation"]