[{"D:\\it-camasutra\\social_network\\my-app\\src\\reportWebVitals.ts":"1","D:\\it-camasutra\\social_network\\my-app\\src\\App.tsx":"2","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Navbar\\Navbar.tsx":"3","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Header\\Header.tsx":"4","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Dialogs\\Dialogs.tsx":"5","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"6","D:\\it-camasutra\\social_network\\my-app\\src\\index.tsx":"7","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\Profile.tsx":"8","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"9","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Music\\Music.tsx":"10","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Setting\\Setting.tsx":"11","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"12","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx":"13","D:\\it-camasutra\\social_network\\my-app\\src\\components\\News\\News.tsx":"14","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"15","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Sidebar\\Sidebar.tsx":"16","D:\\it-camasutra\\social_network\\my-app\\src\\redux\\profile-reducer.ts":"17","D:\\it-camasutra\\social_network\\my-app\\src\\redux\\dialogs-reducer.ts":"18","D:\\it-camasutra\\social_network\\my-app\\src\\redux\\redux-store.ts":"19","D:\\it-camasutra\\social_network\\my-app\\src\\redux\\sidebar-reducer.ts":"20","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx":"21","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"22","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Users\\UsersContainer.tsx":"23","D:\\it-camasutra\\social_network\\my-app\\src\\redux\\users-reducer.ts":"24","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Users\\Users.tsx":"25","D:\\it-camasutra\\social_network\\my-app\\src\\components\\common\\Preloader\\ Preloader.tsx":"26","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"27","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Header\\HeaderContainer.tsx":"28","D:\\it-camasutra\\social_network\\my-app\\src\\redux\\auth-reducer.ts":"29","D:\\it-camasutra\\social_network\\my-app\\src\\api\\api.ts":"30","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Login\\Login.tsx":"31","D:\\it-camasutra\\social_network\\my-app\\src\\hoc\\WithAuthRedirect.tsx":"32"},{"size":425,"mtime":1610213405721,"results":"33","hashOfConfig":"34"},{"size":2057,"mtime":1617477695089,"results":"35","hashOfConfig":"34"},{"size":1194,"mtime":1616334609096,"results":"36","hashOfConfig":"34"},{"size":671,"mtime":1617459025801,"results":"37","hashOfConfig":"34"},{"size":2084,"mtime":1617649083292,"results":"38","hashOfConfig":"34"},{"size":1382,"mtime":1616499458330,"results":"39","hashOfConfig":"34"},{"size":866,"mtime":1615282378019,"results":"40","hashOfConfig":"34"},{"size":519,"mtime":1616491260365,"results":"41","hashOfConfig":"34"},{"size":511,"mtime":1611617400565,"results":"42","hashOfConfig":"34"},{"size":175,"mtime":1610132220844,"results":"43","hashOfConfig":"34"},{"size":183,"mtime":1610132780345,"results":"44","hashOfConfig":"34"},{"size":1088,"mtime":1616490256735,"results":"45","hashOfConfig":"34"},{"size":245,"mtime":1616499160540,"results":"46","hashOfConfig":"34"},{"size":171,"mtime":1610132671617,"results":"47","hashOfConfig":"34"},{"size":510,"mtime":1611760785544,"results":"48","hashOfConfig":"34"},{"size":160,"mtime":1611766490002,"results":"49","hashOfConfig":"34"},{"size":2154,"mtime":1617460625546,"results":"50","hashOfConfig":"34"},{"size":2129,"mtime":1616498888126,"results":"51","hashOfConfig":"34"},{"size":699,"mtime":1617450183392,"results":"52","hashOfConfig":"34"},{"size":531,"mtime":1614505043429,"results":"53","hashOfConfig":"34"},{"size":2826,"mtime":1617650928457,"results":"54","hashOfConfig":"34"},{"size":2568,"mtime":1616423032915,"results":"55","hashOfConfig":"34"},{"size":4744,"mtime":1617651223155,"results":"56","hashOfConfig":"34"},{"size":5203,"mtime":1617214238604,"results":"57","hashOfConfig":"34"},{"size":1831,"mtime":1617453507173,"results":"58","hashOfConfig":"34"},{"size":212,"mtime":1616326263801,"results":"59","hashOfConfig":"34"},{"size":1759,"mtime":1617650928481,"results":"60","hashOfConfig":"34"},{"size":977,"mtime":1617462004841,"results":"61","hashOfConfig":"34"},{"size":1878,"mtime":1617461741264,"results":"62","hashOfConfig":"34"},{"size":911,"mtime":1617461879041,"results":"63","hashOfConfig":"34"},{"size":98,"mtime":1617477617066,"results":"64","hashOfConfig":"34"},{"size":859,"mtime":1617647682367,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"16n85si",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"73"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"73"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"73"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"73"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"73"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"73"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\it-camasutra\\social_network\\my-app\\src\\reportWebVitals.ts",[],["145","146"],"D:\\it-camasutra\\social_network\\my-app\\src\\App.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Navbar\\Navbar.tsx",[],["147","148"],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Header\\Header.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Dialogs\\Dialogs.tsx",["149"],"import s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React, {ChangeEvent} from \"react\";\r\nimport {InitStateType} from \"../../redux/dialogs-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport type DialogsPropsType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nexport type MessagePropsType = {\r\n    message: string\r\n}\r\n\r\nexport type Props = {\r\n    dialogPage: InitStateType\r\n    onNewMessageChange: (body: string) => void\r\n    onSendMessageClick: () => void\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nfunction Dialogs(props: Props) {\r\n    let state = props.dialogPage\r\n    let dialogElement = state.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n    let messagesElement = state.messages.map(m => <Message message={m.message}/>)\r\n    let newMessageBody = state.newMessageBody\r\n\r\n    let onSendMessageClick = () => {\r\n        props.onSendMessageClick()\r\n        // props.dispatch(sendMessageAC())\r\n    }\r\n    let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = e.currentTarget.value\r\n        props.onNewMessageChange(body)\r\n        // props.dispatch(newMessageBodyAC(body))\r\n    }\r\n    // if (!props.isAuth) return <Redirect to={\"/login\"}/>      //(props.isAuth === false\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElement}\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div> {messagesElement}</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea value={newMessageBody}\r\n                                  onChange={onNewMessageChange}\r\n                                  placeholder={'enter message'}>\r\n                        </textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageClick}>отправить</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\index.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\Profile.tsx",["150","151"],"import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport MyPosts, {PropsArray} from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {PropsType} from \"./ProfileContainer\";\r\n\r\n\r\n\r\n\r\nfunction Profile(props: PropsType) {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile} />\r\n            <MyPostsContainer />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Music\\Music.tsx",["152"],"import s from './Music.module.css'\r\nimport React from \"react\";\r\n\r\nfunction Music (){\r\n    return(\r\n        <div>\r\n    music\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Setting\\Setting.tsx",["153"],"import s from './Setting.module.css'\r\nimport React from \"react\";\r\n\r\nfunction Setting (){\r\n    return(\r\n        <div>\r\n    setting\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\News\\News.tsx",["154"],"import s from './News.module.css'\r\nimport React from \"react\";\r\n\r\nfunction News (){\r\n    return(\r\n        <div>\r\n    news\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],["155","156"],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Sidebar\\Sidebar.tsx",[],["157","158"],"D:\\it-camasutra\\social_network\\my-app\\src\\redux\\profile-reducer.ts",[],"D:\\it-camasutra\\social_network\\my-app\\src\\redux\\dialogs-reducer.ts",[],"D:\\it-camasutra\\social_network\\my-app\\src\\redux\\redux-store.ts",[],"D:\\it-camasutra\\social_network\\my-app\\src\\redux\\sidebar-reducer.ts",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["159","160"],"import React, {ChangeEvent} from \"react\";\r\nimport {addPostAC,  newTextChangeHandlerAC, PostType} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {Dispatch} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\n\r\n\r\n\r\n// export type PostsType = {\r\n//     id: number\r\n//     message: string\r\n//     countsLike: number\r\n// }\r\n\r\nexport type PropsArrayContainer = {\r\n    // posts: Array<PostsType>\r\n    // addPost: () => void\r\n    // changeUpdateText: (value: string) => void\r\n    // newPostText: string\r\n    // dispatch: (action: ActionsType) => void\r\n    // store: StoreType\r\n    // state: RootStateProps\r\n}\r\n\r\n\r\n// function MyPostsContainer(props: PropsArrayContainer) {\r\n//\r\n//     return (\r\n// <StoreContext.Consumer>\r\n//     {store =>{\r\n//         let postsElement = store.getState().profilePage.posts.map(p => <Post message={p.message} countsLike={p.countsLike}/>)\r\n//         // let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n//\r\n//         let addPost = () => {\r\n//             store.dispatch(addPostAC(store.getState().profilePage.newPostText))\r\n//             // props.addPost()\r\n//         }\r\n//\r\n//         let newTextChangeHandler = (text: string) => {\r\n//             store.dispatch(newTextChangeHandlerAC(text))\r\n//             // props.changeUpdateText(value)\r\n//             // props.dispatch({type: \"CHANGE-NEW-TEXT\", newText: value})\r\n//         }\r\n//         return  <MyPosts posts={store.getState().profilePage.posts}\r\n//                          addPost={addPost}\r\n//                          newPostText={store.getState().profilePage.newPostText}\r\n//                          changeUpdateText={newTextChangeHandler}/>\r\n//     }\r\n//\r\n//     }\r\n//\r\n// </StoreContext.Consumer>\r\n//\r\n//     )\r\n// }\r\n\r\ntype  MapStatePropsType={\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n}\r\ntype MapDispatchType= {\r\n    addPost: ()=>void\r\n    changeUpdateText: (text: string) =>void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType=> {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchType => {\r\n    return {\r\n        addPost:()=> {\r\n            dispatch(addPostAC())\r\n        },\r\n        changeUpdateText: (text)=>{\r\n            dispatch(newTextChangeHandlerAC(text))\r\n        }\r\n    }\r\n}\r\n\r\nexport let MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostContainer",["161","162"],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Users\\UsersContainer.tsx",["163"],"import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    follow, getUsersThunkCreator, InitialStateType,\r\n    setCurrentPage,  toggleFollowingProgress,\r\n    unfollow } from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/ Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype UsersPropsType = MapStatePropsType & MapDispatchType & InitialStateType\r\n\r\nexport type  MapStatePropsType = InitialStateType\r\n    // {\r\n    // users: UsersType[],\r\n//     pageSize: number\r\n//     totalUsersCount: number\r\n//     currentPage: number\r\n//     isFetching: boolean\r\n//     followingInProgress: InitialStateType []\r\n//\r\n// }\r\n\r\nexport type MapDispatchType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n\r\n    setCurrentPage: (pageNumber: number) => void\r\n\r\n\r\n    toggleFollowingProgress: (isFetching: boolean, id: number) => void\r\n    getUsers: (currentPage:number , pageSize:number)=> void\r\n}\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    constructor(props: UsersPropsType) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsers(this.props.pageSize, this.props.currentPage)\r\n        // this.props.toggleIsFetching(true)\r\n        // userAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n        //     this.props.toggleIsFetching(false)\r\n        //     this.props.setUsers(data.items)\r\n        //     this.props.setTotalUsersCount(data.totalCount)\r\n        // })\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number ) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n        // this.props.setCurrentPage(pageNumber)\r\n        // this.props.toggleIsFetching(true)\r\n        // userAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n        //     this.props.toggleIsFetching(false)\r\n        //     this.props.setUsers(data.items)\r\n        //     this.props.setTotalUsersCount(data.totalCount)\r\n        // })\r\n    }\r\n\r\n    render() {\r\n\r\n        // return <Users totalUsersCount={this.props.totalUsersCount} pageSize={this.props.pageSize}\r\n        //               currentPage={this.props.currentPage} onPageChanged={this.onPageChanged}\r\n        //               users={this.props.users}\r\n        // follow={this.props.follow}\r\n        //               unfollow={this.props.unfollow}\r\n        // />\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users users={this.props.users} pageSize={this.props.pageSize}\r\n                        totalUsersCount={this.props.totalUsersCount} currentPage={this.props.currentPage}\r\n                        follow={this.props.follow} unfollow={this.props.unfollow}\r\n                        setCurrentPage={this.props.setCurrentPage}\r\n                        onPageChanged={this.onPageChanged} isFetching={this.props.isFetching}\r\n                   followingInProgress={this.props.followingInProgress} toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                   getUsers={this.props.getUsers}\r\n            />\r\n        </>\r\n\r\n\r\n    }\r\n}\r\n\r\nexport let mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n// export let mapDispatchToProps = (dispatch: Dispatch): MapDispatchType => {\r\n//     return {\r\n//         follow: (userId: number) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unfollow: (userId: number) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (users: UsersType[]) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber: number) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount: number) => {\r\n//             dispatch(setTotalUsersCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching: boolean)=>{\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps,\r\n        {follow, unfollow,\r\n            setCurrentPage,\r\n            toggleFollowingProgress,\r\n            getUsers: getUsersThunkCreator}),\r\nWithAuthRedirect\r\n)(UsersContainer)","D:\\it-camasutra\\social_network\\my-app\\src\\redux\\users-reducer.ts",["164","165","166"],"import {userAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nexport type UsersType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    location: {sity: string, country: string}\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    isFetching: boolean\r\n\r\n}\r\n\r\nexport const initialState = {\r\n    users: [] as Array<UsersType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true ,\r\n    followingInProgress: [] as Array <Number>\r\n\r\n}\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n\r\n            return  {\r\n                ...state,\r\n                users: state.users.map(u=>{\r\n                    if (u.id === action.userId){\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case 'UNFOLLOW':\r\n            return  {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId){\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case \"SET-USERS\":\r\n            return {\r\n                ...state,\r\n               users: [ ...action.users]   //старые юзеры + новые\r\n            }\r\n        case 'SET-CURRENT-PAGE':\r\n            return {\r\n                ...state,\r\n             currentPage: action.currentPage\r\n            }\r\n        case \"SET-TOTAL-USERS-COUNT\":\r\n            return {...state, totalUsersCount: action.count}\r\n        case \"TOGGLE-IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"TOGGLE-IS-FOLLOWING-PROGRESS\":{\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id=> id != action.userId)\r\n            }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport let followsSuccess = (userId: number) => ({type: \"FOLLOW\", userId} as const)\r\nexport let unfollowSuccess = (userId: number) => ({type: \"UNFOLLOW\", userId} as const)\r\nexport let setUsers = (users: Array<UsersType>) => ({type: \"SET-USERS\", users} as const)\r\nexport let setCurrentPage = (currentPage: number) => ({type: \"SET-CURRENT-PAGE\", currentPage } as const)\r\nexport let setTotalUsersCount = (totalUsersCount: number) => ({type: \"SET-TOTAL-USERS-COUNT\",count: totalUsersCount } as const)\r\nexport let toggleIsFetching = (isFetching: boolean) => ({type: \"TOGGLE-IS-FETCHING\",isFetching } as const)\r\nexport let toggleFollowingProgress=(isFetching: boolean, userId: number)=>({type: \"TOGGLE-IS-FOLLOWING-PROGRESS\" , isFetching, userId} as const)\r\n\r\nexport const getUsersThunkCreator = (currentPage:number , pageSize:number)=>{\r\n   return (dispatch: Dispatch)=>{\r\n        dispatch(toggleIsFetching(true))\r\n        userAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number)=>{\r\n   return (dispatch: Dispatch)=>{\r\n       dispatch(toggleFollowingProgress(true,userId ))\r\n       userAPI.follow(userId)\r\n           // axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`,{}, {\r\n           //     withCredentials: true,\r\n           //     headers: {\r\n           //         \"API-KEY\": \"45e88326-78f0-45ca-b953-491c7fd66778\"\r\n           //     }\r\n           //     })\r\n           .then(response => {\r\n               if (response.data.resultCode == 0){\r\n                   dispatch(followsSuccess(userId))\r\n               }\r\n               dispatch(toggleFollowingProgress(false, userId))\r\n           })\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number)=>{\r\n   return (dispatch: Dispatch)=>{\r\n     dispatch( toggleFollowingProgress(true,userId ))\r\n       userAPI.unfollow(userId)\r\n           // axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {\r\n           //         withCredentials: true,\r\n           //         headers: {\r\n           //             \"API-KEY\": \"45e88326-78f0-45ca-b953-491c7fd66778\"\r\n           //         }\r\n           //     })\r\n           .then(response => {\r\n               if (response.data.resultCode == 0){\r\n                   dispatch(unfollowSuccess(userId))\r\n               }\r\n              dispatch( toggleFollowingProgress(false, userId))\r\n           })\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof followsSuccess>\r\n    | ReturnType<typeof unfollowSuccess>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof toggleIsFetching>\r\n    | ReturnType<typeof toggleFollowingProgress>\r\n\r\nexport default usersReducer","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Users\\Users.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\common\\Preloader\\ Preloader.tsx",[],["167","168"],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",["169"],"import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {getUsersProfile} from \"../../redux/profile-reducer\";\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\nimport {RouteComponentProps} from 'react-router';\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\ntype UsersPropsType = MapStatePropsType & MapDispatchType\r\nexport type  MapStatePropsType = {\r\n    profile: null\r\n    // isAuth: boolean\r\n}\r\nexport type MapDispatchType = {\r\n    getUsersProfile: (userId: string) => void\r\n}\r\n\r\nexport type PropsType = RouteComponentProps<PathParamsType> & UsersPropsType\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = String(2)\r\n        }\r\n        this.props.getUsersProfile(userId)\r\n    }\r\n\r\n    render() {\r\n        // if (!this.props.isAuth) return <Redirect to={\"/login\"}/>        //this.props.isAuth === false\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    profile: state.profilePage.profile\r\n    // isAuth: state.auth.isAuth\r\n})\r\n// let WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\n// export default WithAuthRedirect(withRouter(connect(mapStateToProps, {getUsersProfile})(ProfileContainer)))\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUsersProfile}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)","D:\\it-camasutra\\social_network\\my-app\\src\\components\\Header\\HeaderContainer.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\redux\\auth-reducer.ts",[],"D:\\it-camasutra\\social_network\\my-app\\src\\api\\api.ts",[],"D:\\it-camasutra\\social_network\\my-app\\src\\components\\Login\\Login.tsx",[],"D:\\it-camasutra\\social_network\\my-app\\src\\hoc\\WithAuthRedirect.tsx",["170"],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"171","replacedBy":"175"},{"ruleId":"173","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":6,"column":9,"nodeType":"179","messageId":"180","endLine":6,"endColumn":17},{"ruleId":"177","severity":1,"message":"181","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":15},{"ruleId":"177","severity":1,"message":"182","line":3,"column":18,"nodeType":"179","messageId":"180","endLine":3,"endColumn":28},{"ruleId":"177","severity":1,"message":"183","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":9},{"ruleId":"177","severity":1,"message":"183","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":9},{"ruleId":"177","severity":1,"message":"183","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":9},{"ruleId":"171","replacedBy":"184"},{"ruleId":"173","replacedBy":"185"},{"ruleId":"171","replacedBy":"186"},{"ruleId":"173","replacedBy":"187"},{"ruleId":"177","severity":1,"message":"188","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":13},{"ruleId":"177","severity":1,"message":"189","line":1,"column":16,"nodeType":"179","messageId":"180","endLine":1,"endColumn":27},{"ruleId":"171","replacedBy":"190"},{"ruleId":"173","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":44,"column":5,"nodeType":"194","messageId":"195","endLine":46,"endColumn":6},{"ruleId":"196","severity":1,"message":"197","line":77,"column":64,"nodeType":"198","messageId":"199","endLine":77,"endColumn":66},{"ruleId":"196","severity":1,"message":"200","line":116,"column":45,"nodeType":"198","messageId":"199","endLine":116,"endColumn":47},{"ruleId":"196","severity":1,"message":"200","line":135,"column":45,"nodeType":"198","messageId":"199","endLine":135,"endColumn":47},{"ruleId":"171","replacedBy":"201"},{"ruleId":"173","replacedBy":"202"},{"ruleId":"177","severity":1,"message":"178","line":6,"column":9,"nodeType":"179","messageId":"180","endLine":6,"endColumn":17},{"ruleId":"177","severity":1,"message":"203","line":1,"column":16,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],["204"],["205"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'MyPosts' is defined but never used.","'PropsArray' is defined but never used.","'s' is defined but never used.",["204"],["205"],["204"],["205"],"'React' is defined but never used.","'ChangeEvent' is defined but never used.",["204"],["205"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",["204"],["205"],"'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]