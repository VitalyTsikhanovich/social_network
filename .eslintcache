[{"D:\\it-camasutra\\social_network\\src\\reportWebVitals.ts":"1","D:\\it-camasutra\\social_network\\src\\redux\\app-reducer.ts":"2","D:\\it-camasutra\\social_network\\src\\components\\News\\News.tsx":"3","D:\\it-camasutra\\social_network\\src\\components\\Users\\UsersContainer.tsx":"4","D:\\it-camasutra\\social_network\\src\\components\\Navbar\\Navbar.tsx":"5","D:\\it-camasutra\\social_network\\src\\components\\common\\Preloader\\ Preloader.tsx":"6","D:\\it-camasutra\\social_network\\src\\api\\api.ts":"7","D:\\it-camasutra\\social_network\\src\\components\\Users\\Users.tsx":"8","D:\\it-camasutra\\social_network\\src\\utils\\validators\\validators.ts":"9","D:\\it-camasutra\\social_network\\src\\components\\Dialogs\\Message\\Message.tsx":"10","D:\\it-camasutra\\social_network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"11","D:\\it-camasutra\\social_network\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"12","D:\\it-camasutra\\social_network\\src\\components\\Setting\\Setting.tsx":"13","D:\\it-camasutra\\social_network\\src\\components\\Profile\\Profile.tsx":"14","D:\\it-camasutra\\social_network\\src\\redux\\users-selectors.ts":"15","D:\\it-camasutra\\social_network\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"16","D:\\it-camasutra\\social_network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"17","D:\\it-camasutra\\social_network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"18","D:\\it-camasutra\\social_network\\src\\components\\Dialogs\\Dialogs.tsx":"19","D:\\it-camasutra\\social_network\\src\\index.tsx":"20","D:\\it-camasutra\\social_network\\src\\App.tsx":"21","D:\\it-camasutra\\social_network\\src\\components\\Dialogs\\DialogsContainer.tsx":"22","D:\\it-camasutra\\social_network\\src\\components\\common\\FormsControls\\FormsControls.tsx":"23","D:\\it-camasutra\\social_network\\src\\redux\\profile-reducer.ts":"24","D:\\it-camasutra\\social_network\\src\\redux\\auth-reducer.ts":"25","D:\\it-camasutra\\social_network\\src\\components\\Header\\Header.tsx":"26","D:\\it-camasutra\\social_network\\src\\redux\\users-reducer.ts":"27","D:\\it-camasutra\\social_network\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"28","D:\\it-camasutra\\social_network\\src\\utils\\object-helpers.ts":"29","D:\\it-camasutra\\social_network\\src\\components\\Login\\Login.tsx":"30","D:\\it-camasutra\\social_network\\src\\redux\\redux-store.ts":"31"},{"size":440,"mtime":1620404244911,"results":"32","hashOfConfig":"33"},{"size":1103,"mtime":1620404244909,"results":"34","hashOfConfig":"33"},{"size":171,"mtime":1620404244900,"results":"35","hashOfConfig":"33"},{"size":5272,"mtime":1620405597871,"results":"36","hashOfConfig":"33"},{"size":1194,"mtime":1620404244899,"results":"37","hashOfConfig":"33"},{"size":212,"mtime":1620404244904,"results":"38","hashOfConfig":"33"},{"size":1520,"mtime":1620404244897,"results":"39","hashOfConfig":"33"},{"size":1831,"mtime":1620404244903,"results":"40","hashOfConfig":"33"},{"size":505,"mtime":1620404244912,"results":"41","hashOfConfig":"33"},{"size":245,"mtime":1620404244898,"results":"42","hashOfConfig":"33"},{"size":2591,"mtime":1620404244900,"results":"43","hashOfConfig":"33"},{"size":511,"mtime":1620404244901,"results":"44","hashOfConfig":"33"},{"size":183,"mtime":1620404244902,"results":"45","hashOfConfig":"33"},{"size":575,"mtime":1620404244901,"results":"46","hashOfConfig":"33"},{"size":802,"mtime":1620405603261,"results":"47","hashOfConfig":"33"},{"size":510,"mtime":1620404244897,"results":"48","hashOfConfig":"33"},{"size":1356,"mtime":1620413463285,"results":"49","hashOfConfig":"33"},{"size":1145,"mtime":1620417683585,"results":"50","hashOfConfig":"33"},{"size":2917,"mtime":1620404244897,"results":"51","hashOfConfig":"33"},{"size":891,"mtime":1624015072069,"results":"52","hashOfConfig":"33"},{"size":2855,"mtime":1624221197023,"results":"53","hashOfConfig":"33"},{"size":2762,"mtime":1620404244897,"results":"54","hashOfConfig":"33"},{"size":995,"mtime":1620404244904,"results":"55","hashOfConfig":"33"},{"size":3196,"mtime":1623790838243,"results":"56","hashOfConfig":"33"},{"size":2928,"mtime":1623779102616,"results":"57","hashOfConfig":"33"},{"size":759,"mtime":1620404244898,"results":"58","hashOfConfig":"33"},{"size":5038,"mtime":1624014981234,"results":"59","hashOfConfig":"33"},{"size":2663,"mtime":1621768483506,"results":"60","hashOfConfig":"33"},{"size":396,"mtime":1624014735211,"results":"61","hashOfConfig":"33"},{"size":2076,"mtime":1620404244899,"results":"62","hashOfConfig":"33"},{"size":1023,"mtime":1624206499414,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"bumk1a",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"85"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"91"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\it-camasutra\\social_network\\src\\reportWebVitals.ts",[],["135","136"],"D:\\it-camasutra\\social_network\\src\\redux\\app-reducer.ts",[],"D:\\it-camasutra\\social_network\\src\\components\\News\\News.tsx",["137"],"D:\\it-camasutra\\social_network\\src\\components\\Users\\UsersContainer.tsx",["138"],"D:\\it-camasutra\\social_network\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\it-camasutra\\social_network\\src\\components\\common\\Preloader\\ Preloader.tsx",[],"D:\\it-camasutra\\social_network\\src\\api\\api.ts",[],["139","140"],"D:\\it-camasutra\\social_network\\src\\components\\Users\\Users.tsx",[],["141","142"],"D:\\it-camasutra\\social_network\\src\\utils\\validators\\validators.ts",[],["143","144"],"D:\\it-camasutra\\social_network\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\it-camasutra\\social_network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["145"],"import React from \"react\";\r\nimport {addPostAC,  PostType} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {Dispatch} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\n\r\n\r\n\r\n// export type PostsType = {\r\n//     id: number\r\n//     message: string\r\n//     countsLike: number\r\n// }\r\n\r\nexport type PropsArrayContainer = {\r\n    // posts: Array<PostsType>\r\n    // addPost: () => void\r\n    // changeUpdateText: (value: string) => void\r\n    // newPostText: string\r\n    // dispatch: (action: ActionsType) => void\r\n    // store: StoreType\r\n    // state: RootStateProps\r\n}\r\n\r\n\r\n// function MyPostsContainer(props: PropsArrayContainer) {\r\n//\r\n//     return (\r\n// <StoreContext.Consumer>\r\n//     {store =>{\r\n//         let postsElement = store.getState().profilePage.posts.map(p => <Post message={p.message} countsLike={p.countsLike}/>)\r\n//         // let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n//\r\n//         let addPost = () => {\r\n//             store.dispatch(addPostAC(store.getState().profilePage.newPostText))\r\n//             // props.addPost()\r\n//         }\r\n//\r\n//         let newTextChangeHandler = (text: string) => {\r\n//             store.dispatch(newTextChangeHandlerAC(text))\r\n//             // props.changeUpdateText(value)\r\n//             // props.dispatch({type: \"CHANGE-NEW-TEXT\", newText: value})\r\n//         }\r\n//         return  <MyPosts posts={store.getState().profilePage.posts}\r\n//                          addPost={addPost}\r\n//                          newPostText={store.getState().profilePage.newPostText}\r\n//                          changeUpdateText={newTextChangeHandler}/>\r\n//     }\r\n//\r\n//     }\r\n//\r\n// </StoreContext.Consumer>\r\n//\r\n//     )\r\n// }\r\n\r\ntype  MapStatePropsType={\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n}\r\ntype MapDispatchType= {\r\n    addPost: (newPostText: string)=>void\r\n    // changeUpdateText: (text: string) =>void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType=> {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchType => {\r\n    return {\r\n        addPost:(newPostText: string)=> {\r\n            dispatch(addPostAC(newPostText))\r\n         },\r\n        // changeUpdateText: (text)=>{\r\n        //     dispatch(newTextChangeHandlerAC(text))\r\n        // }\r\n    }\r\n}\r\n\r\nexport let MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostContainer",["146","147"],"D:\\it-camasutra\\social_network\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",[],"D:\\it-camasutra\\social_network\\src\\components\\Setting\\Setting.tsx",["148"],"import s from './Setting.module.css'\r\nimport React from \"react\";\r\n\r\nfunction Setting (){\r\n    return(\r\n        <div>\r\n    setting\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting","D:\\it-camasutra\\social_network\\src\\components\\Profile\\Profile.tsx",["149","150"],"D:\\it-camasutra\\social_network\\src\\redux\\users-selectors.ts",[],"D:\\it-camasutra\\social_network\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\it-camasutra\\social_network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["151","152"],"import s from \"./ProfileInfo.module.css\"\r\nimport React from \"react\";\r\nimport Preloader from \"../../common/Preloader/ Preloader\";\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\ntype ProfileInfoProps={\r\n    profile: any\r\n    status: string\r\n    updateStatus: string\r\n}\r\n\r\nfunction ProfileInfo(props: ProfileInfoProps) {\r\nif (!props.profile){\r\n    return <Preloader/>\r\n}\r\n    return (\r\n        <div >\r\n            {/*<div className={s.discrip}>*/}\r\n            {/*    <img src={league}*/}\r\n            {/*        alt=\"\"/>*/}\r\n            {/*</div>*/}\r\n\r\n            <div className={s.cont}>\r\n                <img  src={props.profile.photos.large} alt={'user photo'}/>\r\n                </div>\r\n\r\n                <div>\r\n                    {/*<p>{props.profile.userId}</p>*/}\r\n                    <p>Имя: {props.profile.fullName}</p>\r\n                </div>\r\n            <div>\r\n                <p>{props.profile.lookingForAJobDescription}</p>\r\n            </div>\r\n            <div>\r\n                <p>{props.profile.contacts.vk}</p>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n            {/*<div>*/}\r\n            {/*    main content*/}\r\n            {/*</div>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","D:\\it-camasutra\\social_network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],"D:\\it-camasutra\\social_network\\src\\components\\Dialogs\\Dialogs.tsx",["153","154"],"import s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React, {ChangeEvent} from \"react\";\r\nimport {InitStateType} from \"../../redux/dialogs-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nexport type DialogsPropsType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nexport type MessagePropsType = {\r\n    message: string\r\n}\r\n\r\nexport type Props = {\r\n    dialogPage: InitStateType\r\n    // onNewMessageChange: (body: string) => void\r\n    onSendMessageClick: (newMessageBody: string) => void\r\n    // addNewMessage: ()=> void\r\n    isAuth: boolean\r\n    newMessageBody: string\r\n}\r\n\r\nlet maxLength = maxLengthCreator(6)\r\nconst AddMessageForm: React.FC<InjectedFormProps<Props>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={'newMessageBody'}\r\n                   validate={[required, maxLength ]}\r\n                   placeholder={'enter message'}>\r\n            </Field>\r\n            <div>\r\n                <button>отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<Props>({\r\n    // a unique name for the form   уникальное имя\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\n\r\n\r\nfunction Dialogs(props: Props) {\r\n    let state = props.dialogPage\r\n    let dialogElement = state.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n    let messagesElement = state.messages.map(m => <Message message={m.message}/>)\r\n    // let newMessageBody = state.newMessageBody\r\n    // let onSendMessageClick = () => {\r\n        // props.onSendMessageClick()\r\n        // props.dispatch(sendMessageAC())\r\n    // }\r\n\r\n    let addNewMessage = (values: Props) => {\r\n        props.onSendMessageClick(values.newMessageBody)\r\n    }\r\n\r\n    // let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    //     let body = e.currentTarget.value\r\n    //     props.onNewMessageChange(body)\r\n    //     // props.dispatch(newMessageBodyAC(body))\r\n    // }\r\n    // if (!props.isAuth) return <Redirect to={\"/login\"}/>      //(props.isAuth === false\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElement}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>\r\n                    {messagesElement}\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs","D:\\it-camasutra\\social_network\\src\\index.tsx",[],"D:\\it-camasutra\\social_network\\src\\App.tsx",[],"D:\\it-camasutra\\social_network\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"D:\\it-camasutra\\social_network\\src\\components\\common\\FormsControls\\FormsControls.tsx",[],"D:\\it-camasutra\\social_network\\src\\redux\\profile-reducer.ts",["155"],"D:\\it-camasutra\\social_network\\src\\redux\\auth-reducer.ts",[],"D:\\it-camasutra\\social_network\\src\\components\\Header\\Header.tsx",[],"D:\\it-camasutra\\social_network\\src\\redux\\users-reducer.ts",["156","157","158"],"D:\\it-camasutra\\social_network\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\it-camasutra\\social_network\\src\\utils\\object-helpers.ts",["159"],"D:\\it-camasutra\\social_network\\src\\components\\Login\\Login.tsx",[],"D:\\it-camasutra\\social_network\\src\\redux\\redux-store.ts",["160"],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":9},{"ruleId":"169","severity":1,"message":"170","line":48,"column":5,"nodeType":"171","messageId":"172","endLine":50,"endColumn":6},{"ruleId":"161","replacedBy":"173"},{"ruleId":"163","replacedBy":"174"},{"ruleId":"161","replacedBy":"175"},{"ruleId":"163","replacedBy":"176"},{"ruleId":"161","replacedBy":"177"},{"ruleId":"163","replacedBy":"178"},{"ruleId":"165","severity":1,"message":"179","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"161","replacedBy":"180"},{"ruleId":"163","replacedBy":"181"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":9},{"ruleId":"165","severity":1,"message":"182","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":15},{"ruleId":"165","severity":1,"message":"183","line":3,"column":18,"nodeType":"167","messageId":"168","endLine":3,"endColumn":28},{"ruleId":"165","severity":1,"message":"184","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":21},{"ruleId":"185","severity":1,"message":"186","line":24,"column":17,"nodeType":"187","endLine":24,"endColumn":76},{"ruleId":"165","severity":1,"message":"188","line":4,"column":16,"nodeType":"167","messageId":"168","endLine":4,"endColumn":27},{"ruleId":"165","severity":1,"message":"189","line":6,"column":9,"nodeType":"167","messageId":"168","endLine":6,"endColumn":17},{"ruleId":"190","severity":1,"message":"191","line":38,"column":63,"nodeType":"192","messageId":"193","endLine":38,"endColumn":65},{"ruleId":"165","severity":1,"message":"194","line":3,"column":9,"nodeType":"167","messageId":"168","endLine":3,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":80,"column":65,"nodeType":"192","messageId":"193","endLine":80,"endColumn":67},{"ruleId":"190","severity":1,"message":"195","line":123,"column":34,"nodeType":"192","messageId":"193","endLine":123,"endColumn":36},{"ruleId":"165","severity":1,"message":"196","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"165","severity":1,"message":"197","line":1,"column":56,"nodeType":"167","messageId":"168","endLine":1,"endColumn":63},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"@typescript-eslint/no-unused-vars","'s' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["198"],["199"],["198"],["199"],["198"],["199"],"'React' is defined but never used.",["198"],["199"],"'MyPosts' is defined but never used.","'PropsArray' is defined but never used.","'ProfileStatus' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'ChangeEvent' is defined but never used.","'Redirect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'updateObjectInArray' is defined but never used.","Expected '===' and instead saw '=='.","'react' is defined but never used.","'compose' is defined but never used.","no-global-assign","no-unsafe-negation"]